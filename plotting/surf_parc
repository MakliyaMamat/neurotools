#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Brain Parcellation Plotter with Region Values
============================================

Loads:
1. Parcellations from GIFTI files (.label.gii)
2. Region values from a text file (one value per region)
Plots the data on fsaverage surfaces.

Author: Makliya Mamat (makliyanotes.com)
Date: 2025-03-25  
"""

from surfplot import Plot
from neuromaps.datasets import fetch_fsaverage
import numpy as np
import nibabel as nib
from brainspace.mesh.mesh_io import read_surface
from pathlib import Path

# Load background surfaces
surfaces = fetch_fsaverage(density='164k')
lh_surf = read_surface(str(surfaces['pial'][0]))  # Left pial surface
rh_surf = read_surface(str(surfaces['pial'][1]))  # Right pial surface

# Load your converted parcellation
atlas_lh = nib.load('lh_parcellation.label.gii').agg_data()
atlas_rh = nib.load('rh_parcellation.label.gii').agg_data()

# Combine hemispheres
atlas = np.concatenate([atlas_lh, atlas_rh])

# Verify vertex counts match
print(f"Surface vertices - Left: {lh_surf.n_points}, Right: {rh_surf.n_points}")
print(f"Parcellation vertices - Left: {len(atlas_lh)}, Right: {len(atlas_rh)}")

# Assign random values to parcels
unique = np.unique(atlas)[1:]  # Exclude background (0)
for val in unique:
    atlas[atlas == val] = np.random.uniform(-2, 2)

# Generate plot
p = Plot(lh_surf, rh_surf, 
         views=['lateral', 'medial'], 
         zoom=1.2)

p.add_layer(atlas, 
            cmap='coolwarm',
            cbar=True,
            color_range=(-2, 2))

fig = p.build()
fig.savefig('my_custom_plot.png', 
            dpi=300, 
            bbox_inches='tight',
            transparent=False)

print("Plot saved successfully!")
